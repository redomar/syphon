# =============================================================================
# OPTIMIZED SYPHON DOCKERFILE - SPEED FOCUSED
# =============================================================================

FROM node:22-alpine AS base
# Minimal package install for faster builds
RUN apk add --no-cache libc6-compat dumb-init

# =============================================================================
# DEPENDENCIES - Use npm ci with optimizations
# =============================================================================
FROM base AS deps
WORKDIR /app

# Copy package files
COPY package.json package-lock.json* ./

# Optimized npm install with aggressive caching
RUN npm ci --omit=dev --frozen-lockfile --prefer-offline --no-audit --no-fund --progress=false && \
    npm cache clean --force

# =============================================================================
# BUILDER - Optimized build stage
# =============================================================================
FROM base AS builder
WORKDIR /app

# Copy package files
COPY package.json package-lock.json* ./

# Install with build optimizations
RUN npm ci --frozen-lockfile --prefer-offline --no-audit --no-fund --progress=false && \
    npm cache clean --force

# Copy source (use .dockerignore to exclude unnecessary files)
COPY . .

# Build with optimizations
ENV NEXT_TELEMETRY_DISABLED=1
ENV NODE_ENV=production
ENV SKIP_ENV_VALIDATION=1

# Single optimized build command
RUN npx prisma generate && \
    npm run build && \
    npm cache clean --force && \
    rm -rf ~/.npm && \
    rm -rf .git && \
    rm -rf src && \
    find . -name "*.map" -delete

# =============================================================================
# RUNTIME - Minimal production image
# =============================================================================
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV PORT=3001

# Create user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Copy only essential files
COPY --from=deps --chown=nextjs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=nextjs:nodejs /app/.next ./.next
COPY --from=builder --chown=nextjs:nodejs /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/package.json ./package.json
COPY --from=builder --chown=nextjs:nodejs /app/generated ./generated

# Prisma setup
RUN find /app -name "*query_engine*" -exec chmod +x {} \; || true

USER nextjs

EXPOSE 3001

# Minimal healthcheck
HEALTHCHECK --interval=60s --timeout=5s --start-period=30s --retries=2 \
    CMD curl -f http://localhost:3001/api/health || exit 1

ENTRYPOINT ["dumb-init", "--"]
CMD ["npm", "start"]